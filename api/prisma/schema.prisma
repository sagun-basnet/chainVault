generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id             Int             @id @default(autoincrement())
  name           String
  email          String          @unique
  password       String
  role           Role            @default(USER)
  files          File[]
  sharedLinks    SharedLink[]
  blockchainLogs BlockchainLog[]
  createdAt      DateTime        @default(now())
}

model File {
  id        Int      @id @default(autoincrement())
  name      String
  path      String
  size      Int
  type      String
  category  String?
  userId    Int
  createdAt DateTime @default(now())

  user           User            @relation(fields: [userId], references: [id])
  tags           FileTag[]
  sharedLinks    SharedLink[]
  blockchainLogs BlockchainLog[]
}

model Tag {
  id    Int       @id @default(autoincrement())
  name  String    @unique
  files FileTag[]
}

model FileTag {
  id     Int @id @default(autoincrement())
  fileId Int
  tagId  Int

  file File @relation(fields: [fileId], references: [id])
  tag  Tag  @relation(fields: [tagId], references: [id])

  @@unique([fileId, tagId])
}

model SharedLink {
  id         Int             @id @default(autoincrement())
  fileId     Int
  userId     Int
  token      String          @unique
  password   String?
  permission SharePermission
  expiresAt  DateTime?
  createdAt  DateTime        @default(now())

  file            File           @relation(fields: [fileId], references: [id])
  user            User           @relation(fields: [userId], references: [id])
  blockchainLog   BlockchainLog? @relation(fields: [blockchainLogId], references: [id])
  blockchainLogId Int?
}

model BlockchainLog {
  id        Int        @id @default(autoincrement())
  fileId    Int
  userId    Int
  action    FileAction
  hash      String
  txHash    String?
  timestamp DateTime   @default(now())

  file       File         @relation(fields: [fileId], references: [id])
  user       User         @relation(fields: [userId], references: [id])
  SharedLink SharedLink[]
}

model PasswordResetOtp {
  id        Int      @id @default(autoincrement())
  email     String
  otp       String
  expiresAt DateTime
}

enum Role {
  USER
  ADMIN
}

enum SharePermission {
  VIEW_ONLY
  DOWNLOAD
}

enum FileAction {
  UPLOAD
  DELETE
  UPDATE
  SHARE
}
